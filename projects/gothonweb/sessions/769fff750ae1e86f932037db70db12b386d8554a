KGRwMQpTJ2NvdW50JwpwMgpJMApzUydpcCcKcDMKTnNTJ3Jvb20nCnA0CmNjb3B5X3JlZwpfcmVj
b25zdHJ1Y3RvcgpwNQooY2dvdGhvbndlYi5tYXAKUm9vbQpwNgpjX19idWlsdGluX18Kb2JqZWN0
CnA3Ck50UnA4CihkcDkKUydwYXRocycKcDEwCihkcDExClMnZG9kZ2UnCnAxMgpnNQooY2dvdGhv
bndlYi5tYXAKRGVhdGgKcDEzCmc3Ck50UnAxNAooZHAxNQpTJ2Rlc2NyaXB0aW9uJwpwMTYKUyJc
bkxpa2UgYSB3b3JsZCBjbGFzcyBib3hlciwgeW91IGRvZGdlLCB3ZWF2ZSwgc2xpcCBhbmQgc2xp
ZGUgcmlnaHRcbmFzIHRoZSBHb3Rob24ncyBibGFzdGVyIGNyYW5rcyBhIGxhc2VyIHBhc3QgeW91
ciBoZWFkLlxuSW4gdGhlIG1pZGRsZSBvZiB5b3VyIGFydGZ1bCBkb2RnZSwgeW91ciBmb290IHNs
aXBzIGFuZCB5b3VcbmJhbmcgeW91ciBoZWFkIG9uIHRoZSBtZXRhbCB3YWxsIGFuZCBwYXNzIG91
dC5cbllvdSB3YWtlIHVwIHNob3J0bHkgYWZ0ZXIgb25seSB0byBkaWUgYXMgdGhlIEdvdGhvbiBz
dG9tcHMgb25cbnlvdXIgaGVhZCBhbmQgZWF0cyB5b3UuXG4iCnAxNwpzUyduYW1lJwpwMTgKUydk
ZWF0aCcKcDE5CnNTJ3F1aXAnCnAyMApTJ1lvdXIgbW9tIHdvdWxkIGJlIHByb3VkLi4uIGlmIHNo
ZSB3ZXJlIHNtYXJ0ZXIuJwpwMjEKc2JzUyd0ZWxsIGEgam9rZScKcDIyCmc1CihnNgpnNwpOdFJw
MjMKKGRwMjQKZzEwCihkcDI1ClMnKicKZzUKKGcxMwpnNwpOdFJwMjYKKGRwMjcKZzE2ClMnXG5U
aGUgbG9jayBidXp6ZXMgb25lIGxhc3QgdGltZSBhbmQgdGhlbiB5b3UgaGVhciBhIHNpY2tlbmlu
Z1xubWVsdGluZyBzb3VuZCBhcyB0aGUgbWVjaGFuaXNtIGlzIGZ1c2VkIHRvZ2V0aGVyLlxuWW91
IGRlY2lkZSB0byBzaXQgdGhlcmUsIGFuZCBmaW5hbGx5IHRoZSBHb3Rob25zIGJsb3cgdXAgdGhl
XG5zaGlwIGZyb20gdGhlaXIgc2hpcCBhbmQgeW91IGRpZS5cbicKcDI4CnNnMTgKZzE5CnNnMjAK
UydTdWNoIGEgbG9zZXIuJwpwMjkKc2JzUycwMTMyJwpwMzAKZzUKKGc2Cmc3Ck50UnAzMQooZHAz
MgpnMTAKKGRwMzMKUyd0aHJvdyB0aGUgYm9tYicKcDM0Cmc1CihnMTMKZzcKTnRScDM1CihkcDM2
CmcxNgpTJ1xuSW4gYSBwYW5pYyB5b3UgdGhyb3cgdGhlIGJvbWIgYXQgdGhlIGdyb3VwIG9mIEdv
dGhvbnNcbmFuZCBtYWtlIGEgbGVhcCBmb3IgdGhlIGRvb3IuIFJpZ2h0IGFzIHlvdSBkcm9wIGl0
IGFcbkdvdGhvbiBzaG9vdHMgeW91IHJpZ2h0IGluIHRoZSBiYWNrIGtpbGxpbmcgeW91LlxuQXMg
eW91IGRpZSB5b3Ugc2VlIGFub3RoZXIgR290aG9uIGZyYW50aWNhbGx5IHRyeSB0byBkaXNhcm1c
bnRoZSBib21iLiBZb3UgZGllIGtub3dpbmcgdGhleSB3aWxsIHByb2JhYmx5IGJsb3cgdXAgd2hl
blxuaXQgZ29lcyBvZmYuXG4nCnAzNwpzZzE4CmcxOQpzZzIwClMnWW91IGRpZWQuIFlvdSBraW5k
YSBzdWNrIGF0IHRoaXMuJwpwMzgKc2JzUydzbG93bHkgcGxhY2UgdGhlIGJvbWInCnAzOQpnNQoo
ZzYKZzcKTnRScDQwCihkcDQxCmcxMAooZHA0MgpTJyonCmc1CihnNgpnNwpOdFJwNDMKKGRwNDQK
ZzEwCihkcDQ1CnNTJ2NvdW50ZXInCnA0NgpJMApzZzE4ClMnVGhlIEVuZCcKcDQ3CnNnMTYKUydc
bllvdSBqdW1wIGludG8gYSByYW5kb20gcG9kIGFuZCBoaXQgdGhlIGVqZWN0IGJ1dHRvbi5cblRo
ZSBwb2QgZXNjYXBlcyBvdXQgaW50byB0aGUgdm9pZCBvZiBzcGFjZSwgdGhlblxuaW1wbG9kZXMg
YXMgdGhlIGh1bGwgcnVwdHVyZXMsIGN1cnNoaW5nIHlvdXIgYm9keVxuaW50byBqYW0gamVsbHku
XG4nCnA0OApzYnNTJzInCmc1CihnNgpnNwpOdFJwNDkKKGRwNTAKZzEwCihkcDUxCnNnNDYKSTAK
c2cxOApnNDcKc2cxNgpTJ1xuWW91IGp1bXAgaW50byBwb2QgMiBhbmQgaGl0IHRoZSBlamVjdCBi
dXR0b24uXG5UaGUgcG9kIGVhc2lseSBzbGlkZXMgb3V0IGludG8gc3BhY2UgaGVhZGluZyB0b1xu
dGhlIHBsYW5ldCBiZWxvdy4gQXMgaXQgZmxpZXMgdG8gdGhlIHBsYW5ldCwgeW91IGxvb2tcbmJh
Y2sgYW5kIHNlZSB5b3VyIHNoaXAgaW1wbG9kZSBhbmQgZXhwbG9kZSBsaWtlIGFcbmJyaWdodCBz
dGFyLCB0YWtpbmcgb3V0IHRoZSBHb3Rob24gc2hpcCBhdCB0aGUgc2FtZVxudGltZS4gIFlvdSB3
b24hXG4nCnA1MgpzYnNzZzQ2CkkwCnNnMTgKUydFc2NhcGUgUG9kJwpwNTMKc2cxNgpTIlxuWW91
IHBvaW50IHlvdXIgYmxhc3RlciBhdCB0aGUgYm9tYiB1bmRlciB5b3VyIGFybVxuYW5kIHRoZSBH
b3Rob25zIHB1dCB0aGVpciBoYW5kcyB1cCBhbmQgc3RhcnQgdG8gc3dlYXQuXG5Zb3UgaW5jaCBi
YWNrd2FyZCB0byB0aGUgZG9vciwgb3BlbiBpdCwgYW5kIHRoZW4gY2FyZWZ1bGx5XG5wbGFjZSB0
aGUgYm9tYiBvbiB0aGUgZmxvb3IsIHBvaW50aW5nIHlvdXIgYmxhc3RlciBhdCBpdC5cbllvdSB0
aGVuIGp1bXAgYmFjayB0aHJvdWdoIHRoZSBkb29yLCBwdW5jaCB0aGUgY2xvc2UgYnV0dG9uXG5h
bmQgYmxhc3QgdGhlIGxvY2sgc28gdGhlIEdvdGhvbnMgY2FuJ3QgZ2V0IG91dC5cbk5vdyB0aGF0
IHRoZSBib21iIGlzIHBsYWNlZCwgeW91IHJ1biB0byB0aGUgZXNjYXBlIHBvZCB0b1xuZ2V0IG9m
ZiB0aGlzIHRpbiBjYW4uXG5cbllvdSBydXNoIHRocm91Z2ggdGhlIHNoaXAgZGVzcGVyYXRlbHkg
dHJ5aW5nIHRvIG1ha2UgaXQgdG9cbnRoZSBlc2NhcGUgcG9kIGJlZm9yZSB0aGUgd2hvbGUgc2hp
cCBleHBsb2Rlcy4gIEl0IHNlZW1zIGxpa2VcbmhhcmRseSBhbnkgR290aG9ucyBhcmUgb24gdGhl
IHNoaXAsIHNvIHlvdXIgcnVuIGlzIGNsZWFyIG9mXG5pbnRlcmVmZXJlbmNlLiBZb3UgZ2V0IHRv
IHRoZSBjaGFtYmVyIHdpdGggdGhlIGVzY2FwZSBwb2RzLCBhbmRcbm5vdyBuZWVkIHRvIHBpY2sg
b25lIHRvIHRha2UuIFNvbWUgb2YgdGhlbSBjb3VsZCBiZSBkYW1hZ2VkXG5idXQgeW91IGRvbid0
IGhhdmUgdGltZSB0byBsb29rLiBUaGVyZSdzIDUgcG9kcywgd2hpY2ggb25lXG5kbyB5b3UgdGFr
ZT9cbiIKcDU0CnNic3NnNDYKSTAKc2cxOApTJ1RoZSBCcmlkZ2UnCnA1NQpzZzE2ClMiXG5UaGUg
Y29udGFpbmVyIGNsaWNrcyBvcGVuIGFuZCB0aGUgc2VhbCBicmVha3MsIGxldHRpbmcgZ2FzIG91
dC5cbllvdSBncmFiIHRoZSBuZXV0cm9uIGJvbWIgYW5kIHJ1biBhcyBmYXN0IGFzIHlvdSBjYW4g
dG8gdGhlXG5icmlkZ2Ugd2hlcmUgeW91IG11c3QgcGxhY2UgaXQgaW4gdGhlIHJpZ2h0IHNwb3Qu
XG5cbllvdSAgYnVyc3Qgb250byB0aGUgQnJpZGdlIHdpdGggdGhlIG5ldXRyb24gZGVzdHJ1Y3Qg
Ym9tYlxudW5kZXIgeW91ciBhcm0gYW5kIHN1cnByaXNlIDUgR290aG9ucyB3aG8gYXJlIHRyeWlu
ZyB0b1xudGFrZSBjb250cm9sIG9mIHRoZSBzaGlwLiBFYWNoIG9mIHRoZW0gaGFzIGFuIGV2ZW4g
dWdsaWVyIFxuY2x3b24gY29zdHVtZSB0aGFuIHRoZSBsYXN0LiBUaGV5IGhhdmVuJ3QgcHVsbGVk
IHRoZWlyIFxud2VhcG9ucyBvdXQgeWV0LCBhbmQgYXMgdGhleSBzZWUgdGhlIGFjdGl2ZSBib21i
IHVuZGVyIHlvdXJcbmFybXMgYW5kIGRvbid0IHdhbnQgdG8gc2V0IGl0IG9mZi5cbiIKcDU2CnNi
c3NnNDYKSTAKc2cxOApTJ0xhc2VyIFdlYXBvbiBBcm1vcnknCnA1NwpzZzE2ClMiXG5MdWNreSBm
b3IgeW91IHRoZXkgbWFkZXlvdSBsZWFybiBHb3Rob24gaW5zdWx0cyBpbiB0aGUgYWNhZGVteS5c
bllvdSB0ZWxsIHRoZSBvbmUgR290aG9uIGpva2UgeW91IGtub3c6XG5MYmhlIHpiZ3VyZSB2ZiBm
YiBzbmcsIGp1cmEgZnVyIGZ2Z2YgbmViaGFxIGd1ciB1YmhmciwgZnVyIGZ2Z2YgbmViaGFxIGd1
ciB1Ymhmci5cblRoZSBHb3Rob24gc3RvcHMsIHRyaWVzIG5vdCB0byBsYXVnaCwgdGhlbiBidXN0
cyBvdXQgbGF1Z2hpbmcgYW5kIGNhbid0IG1vdmUuXG5XaGlsZSBoZSdzIGxhdWdoaW5nLCB5b3Ug
cnVuIHVwIGFuZCBzaG9vdCBoaW0gc3F1YXJlIGluIHRoZSBoZWFkLCBcbnB1dHRpbmcgaGltIGRv
d24sIGFuZCB0aGVuIGp1bXAgdGhyb3VnaCB0aGUgV2VhcG9uIEFybW9yeSBkb29yLlxuXG5Zb3Ug
ZG8gYSBkaXZlIHJvbGwgaW50byB0aGUgV2VhcG9uIEFybW9yeSwgY3JvdWNoIGFuZCBzY2FuIHRo
ZSByb29tIFxuZm9yIG1vcmUgR290aG9ucyB0aGF0IG1pZ2h0IGJlIGhpZGluZy4gSXQncyBkZWFk
IHF1aWV0LCB0b28gcXVpZXQuIFxuWW91IHN0YW5kIHVwIGFuZCBydW4gdG8gdGhlIGZhciBzaWRl
IG9mIHRoZSByb29tIGFuZCBmaW5kIHRoZVxubmV1dHJvbiBib21iIGluIGl0cyBjb250YWluZXIu
IFRoZXJlJ3MgYSBrZXlwYWQgbG9jayBvbiB0aGUgYm94XG5hbmQgeW91IG5lZWQgdGhlIGNvZGUg
dG8gZ2V0IHRoZSBib21iIG91dC4gSWYgeW91IGdldCB0aGUgY29kZVxud3JvbmcgNSB0aW1lcyB0
aGVuIHRoZSBsb2NrIGNsb3NlcyBmb3JldmVyIGFuZCB5b3UgY2FuJ3RcbmdldCB0aGUgYm9tYi4g
IFRoZSBjb2RlIGlzIDQgZGlnaXRzLlxuIgpwNTgKc2JzUydzaG9vdCBndW4nCnA1OQpnNQooZzEz
Cmc3Ck50UnA2MAooZHA2MQpnMTYKUydcblF1aWNrIG9uIHRoZSBkcmF3LCB5b3UgeWFuayBvdXQg
eW91ciBibGFzdGVyIGFuZCBmaXJlIGl0IGF0IHRoZSBHb3Rob24uXG5IaXMgY2xvd24gY29zdHVt
ZSBpcyBmbG93aW5nIGFuZCBtb3ZpbmcgYXJvdW5kIGhpcyBib2R5LCB3aGljaCB0aHJvd3Ncbm9m
ZiB5b3VyIGFpbS4gWW91ciBsYXNlciBoaXRzIGhpcyBjb3N0dW1lIGJ1dCBtaXNzZXMgaGltIGVu
dGlyZWx5LiBUaGlzXG5jb21wbGV0ZWx5IHJ1aW5zIGhpcyBicmFuZCBuZXcgY29zdHVtZSBoaXMg
bW90aGVyIGJvdWdodCBoaW0sIHdoaWNoXG5tYWtlcyBoaW0gZmx5IGludG8gYW4gaW5zYW5lIHJh
Z2UgYW5kIGJsYXN0IHlvdSByZXBlYXRlZGx5IGluIHRoZSBmYWNlIHVudGlsXG55b3UgYXJlIGRl
YWQuIFRoZW4gaGUgZWF0cyB5b3UuXG4nCnA2MgpzZzE4CmcxOQpzZzIwCmcyOQpzYnNzZzQ2Ckkw
CnNnMTgKUydDZW50cmFsIENvcnJpZG9yJwpwNjMKc2cxNgpTIlxuVGhlIEdvdGhvbnMgb2YgUGxh
bmV0IFBlcmNhbCAjMjUgaGF2ZSBpbnZhZGVkIHlvdXIgc2hpcCBhbmQgZGVzdHJveWVkXG55b3Vy
IGVudGlyZSBjcmV3LiBZb3UgYXJlIHRoZSBsYXN0IHN1cnZpdm5nIG1lbWJlciBhbmQgeW91ciBs
YXN0XG5taXNzaW9uIGlzIHRvIGdldCB0aGUgbmV1dHJvbiBkZXN0cnVjdCBib21iIGZyb20gdGhl
IFdlYXBvbnMgQXJtb3J5LFxucHV0IGl0IGluIHRoZSBicmlkZ2UsIGFuZCBibG93IHRoZSBzaGlw
IHVwIGFmdGVyIGdldHRpbmcgaW50byBhbiBcbmVzY2FwZSBwb2QuXG5cbllvdSdyZSBydW5uaW5n
IGRvd24gdGhlIGNlbnRyYWwgY29ycmlkb3IgdG8gdGhlIFdlYXBvbnMgQXJtb3J5IHdoZW5cbmEg
R290aG9uIGp1bXBzIG91dCwgcmVkIHNjYWx5IHNraW4sIGRhcmsgZ3JpbXkgdGVldGgsIGFuZCBl
dmlsIGNsb3duIGNvc3R1bWVcbmZsb3dpbmcgYXJvdW5kIGhpcyBoYXRlLWZpbGxlZCBib2R5LiBI
ZSdzIGJsb2NraW5nIHRoZSBkb29yIHRvIHRoZSBcbkFybW9yeSBhbmQgYWJvdXQgdG8gcHVsbCBh
IHdlYXBvbiB0byBibGFzdCB5b3UuXG4iCnA2NApzYnNTJ3Nlc3Npb25faWQnCnA2NQpTJzc2OWZm
Zjc1MGFlMWU4NmY5MzIwMzdkYjcwZGIxMmIzODZkODU1NGEnCnA2NgpzLg==
